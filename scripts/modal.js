// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏
function initModal() {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
    const projectCards = document.querySelectorAll('.project-card');
    
    projectCards.forEach(card => {
        card.addEventListener('click', function() {
            const projectTitle = this.querySelector('h3').textContent;
            const projectTech = this.querySelector('p').textContent;
            
            showProjectModal(projectTitle, projectTech);
        });
    });
    
    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫
    const addEntryBtn = document.querySelector('.add-entry-btn');
    if (addEntryBtn) {
        addEntryBtn.addEventListener('click', showDiaryModal);
    }
}

function showProjectModal(title, tech) {
    const modalHTML = `
        <div class="modal-overlay">
            <div class="modal-content">
                <button class="modal-close">&times;</button>
                <h2>${title}</h2>
                <p><strong>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</strong> ${tech}</p>
                <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞. –≠—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ.</p>
                <div class="modal-actions">
                    <button class="btn btn-primary">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–¥</button>
                    <button class="btn btn-secondary">–î–µ–º–æ</button>
                </div>
            </div>
        </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    
    const modal = document.querySelector('.modal-overlay');
    const closeBtn = document.querySelector('.modal-close');
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeBtn.addEventListener('click', closeModal);
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closeModal();
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') closeModal();
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    addModalStyles();
}

function showDiaryModal() {
    const modalHTML = `
        <div class="modal-overlay">
            <div class="modal-content">
                <button class="modal-close">&times;</button>
                <h2>–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫</h2>
                <form class="diary-form">
                    <div class="form-group">
                        <label for="entryDate">–î–∞—Ç–∞:</label>
                        <input type="date" id="entryDate" required>
                    </div>
                    <div class="form-group">
                        <label for="entryTask">–ó–∞–¥–∞—á–∞:</label>
                        <input type="text" id="entryTask" placeholder="–û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É" required>
                    </div>
                    <div class="form-group">
                        <label for="entryStatus">–°—Ç–∞—Ç—É—Å:</label>
                        <select id="entryStatus" required>
                            <option value="completed">‚úì –í—ã–ø–æ–ª–Ω–µ–Ω–æ</option>
                            <option value="in-progress">‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ</option>
                            <option value="planned">üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å</button>
                </form>
            </div>
        </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    
    const modal = document.querySelector('.modal-overlay');
    const closeBtn = document.querySelector('.modal-close');
    const form = document.querySelector('.diary-form');
    
    closeBtn.addEventListener('click', closeModal);
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closeModal();
    });
    
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        addDiaryEntry();
        closeModal();
    });
    
    addModalStyles();
}

function addDiaryEntry() {
    const date = document.getElementById('entryDate').value;
    const task = document.getElementById('entryTask').value;
    const status = document.getElementById('entryStatus').value;
    
    const statusIcons = {
        'completed': '‚úì',
        'in-progress': '‚è≥',
        'planned': 'üìÖ'
    };
    
    const progressList = document.querySelector('.progress-list');
    const newEntry = document.createElement('div');
    newEntry.className = 'progress-item';
    newEntry.innerHTML = `
        <span class="date">${formatDate(date)} - </span>
        <span class="task">${task} ${statusIcons[status]}</span>
    `;
    
    progressList.prepend(newEntry);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
    newEntry.style.opacity = '0';
    newEntry.style.transform = 'translateY(-10px)';
    setTimeout(() => {
        newEntry.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
        newEntry.style.opacity = '1';
        newEntry.style.transform = 'translateY(0)';
    }, 100);
}

function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', { day: 'numeric', month: 'short' });
}

function closeModal() {
    const modal = document.querySelector('.modal-overlay');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            modal.remove();
        }, 300);
    }
}

function addModalStyles() {
    if (document.getElementById('modal-styles')) return;
    
    const styles = `
        <style id="modal-styles">
            .modal-overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.7);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 1000;
                opacity: 0;
                animation: fadeIn 0.3s ease forwards;
            }
            .modal-content {
                background: white;
                padding: 2rem;
                border-radius: 8px;
                max-width: 500px;
                width: 90%;
                max-height: 80vh;
                overflow-y: auto;
                position: relative;
                transform: translateY(-20px);
                animation: slideUp 0.3s ease forwards;
            }
            .modal-close {
                position: absolute;
                top: 1rem;
                right: 1rem;
                background: none;
                border: none;
                font-size: 1.5rem;
                cursor: pointer;
                color: #7f8c8d;
            }
            .modal-close:hover {
                color: #e74c3c;
            }
            .modal-actions {
                display: flex;
                gap: 1rem;
                margin-top: 1.5rem;
            }
            .btn {
                padding: 0.8rem 1.5rem;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 1rem;
                transition: all 0.3s ease;
            }
            .btn-primary {
                background-color: #3498db;
                color: white;
            }
            .btn-primary:hover {
                background-color: #2980b9;
            }
            .btn-secondary {
                background-color: #95a5a6;
                color: white;
            }
            .btn-secondary:hover {
                background-color: #7f8c8d;
            }
            @keyframes fadeIn {
                to { opacity: 1; }
            }
            @keyframes slideUp {
                to { transform: translateY(0); }
            }
        </style>
    `;
    
    document.head.insertAdjacentHTML('beforeend', styles);
}